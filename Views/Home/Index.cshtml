@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using SolomonsAdviceWebApp.Models
@model SolomonsAdviceWebApp.Models.Entities.Advice
@inject SolomonsAdviceWebApp.Data.ApplicationDbContext _context
@inject Microsoft.AspNetCore.Identity.UserManager<IdentityUser> _userManager
@inject Microsoft.AspNetCore.Identity.SignInManager<IdentityUser> _signManager
@{
    FavoriteAdvice alreadyFavorite = null;
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Solomon's Advice - Home</title>
</head>
<body>
    <div class="hero">
        <h1>Solomon's Advice</h1>
        <p>Get some advices</p>
    </div>

    <div class="container">
        <div class="card-advice">
            <div class="card-content">
                <h5>@Model.Book - @Model.Chapter : @Model.Verses</h5>
                <p id="textToCopy">@Model.Content</p>
                <div class="button-container">
                    <button class="btn btn-primary" onclick="copyText()">Copy advice</button>
                    @if (_signManager.IsSignedIn(User))
                    {
                        var userId = _userManager.GetUserId(User);
                        var existingFavorite = await _context.FavoriteAdvices
                        .FirstOrDefaultAsync(fav => fav.AdviceId == Model.Id && fav.UserId == userId);
                        if(existingFavorite == null)
                        {
                            @await Html.PartialAsync("FavoriteIconPartial",
                                new FavoriteIconViewModel
                                {
                                    AdviceId = Model.Id,
                                    IsFavorite = false
                                })
                        }
                        else
                        {
                            @await Html.PartialAsync("FavoriteIconPartial",
                                new FavoriteIconViewModel
                                {
                                    AdviceId = Model.Id,
                                    IsFavorite = true
                                })
                        }
                    }
                </div>
            </div>
        </div>

        <div class="functions">
            <div class="function-card">
                <img src="@Url.Content("~/Images/procurar.png")" alt="Search Icon">
                <h5>Search for advices</h5>
                <p>Find advices containing specific words or phrases.</p>
                <a asp-action="AdviceByWord">Go</a>
            </div>
            <div class="function-card">
                <img src="@Url.Content("~/Images/surprise-box.png")" alt="Random Advice Icon">
                <h5>Get random advices</h5>
                <p>Get as much random advices as you want.</p>
                <a asp-action="RandomAdvice">Go</a>
            </div>
            <div class="function-card">
                <img src="@Url.Content("~/Images/favorite.png")" alt="Favorite Advice Icon">
                <h5>Mark as favorite</h5>
                <p>Pick your favor advices and save them to read later.</p>
                @if(_signManager.IsSignedIn(User)){
                    <a href="#">Go</a>
                }
                else
                {
                    <a asp-area="Identity" asp-page="/Account/Login">Go</a>
                }
            </div>
        </div>
    </div>
    <div id="notification" class="notification"></div>
</body>
